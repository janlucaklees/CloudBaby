services:
  database:
    image: 'docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52'
    container_name: 'immich_postgres'

    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on

    restart: 'unless-stopped'

    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: '5m'
      start_interval: '30s'
      start_period: '5m'

    environment:
      TZ: '${TZ}'

      POSTGRES_DB: '${DATABASE_NAME}'
      POSTGRES_USER: '${DATABASE_USER}'
      POSTGRES_PASSWORD_FILE: '/run/secrets/immich_database_password'

      POSTGRES_INITDB_ARGS: '--data-checksums'

    secrets:
      - 'immich_database_password'

    volumes:
      - 'database:/var/lib/postgresql/data'

  cache:
    image: 'redis:alpine'
    container_name: 'immich_cache'

    restart: 'unless-stopped'

    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']

    labels:
      com.centurylinklabs.watchtower.enable: true

    environment:
      TZ: '${TZ}'

  immich-server:
    image: 'ghcr.io/immich-app/immich-server:${VERSION}'
    container_name: 'immich_server'

    restart: 'unless-stopped'

    environment: &general-env
      TZ: '${TZ}'

      DB_DATABASE_NAME: '${DATABASE_NAME}'
      DB_USERNAME: '${DATABASE_USER}'
      DB_PASSWORD_FILE: '/run/secrets/immich_database_password'

      REDIS_HOSTNAME: 'cache'

      IMMICH_TRUSTED_PROXIES: '${TRAEFIK_CONTAINER_IP}'

    labels:
      traefik.enable: true
      traefik.docker.network: 'traefik_network'

      traefik.http.routers.immich.entrypoints: 'websecure'
      traefik.http.routers.immich.rule: 'Host(`${DOMAIN}`)'
      traefik.http.routers.immich.tls.certresolver: 'letsencrypt'
      traefik.http.services.immich.loadbalancer.server.port: '2283'

    secrets: &general-secrets
      - 'immich_database_password'

    volumes:
      - '/etc/localtime:/etc/localtime:ro'

      - 'upload:/usr/src/app/upload'

    networks:
      - 'default'
      - 'traefik_network'

    depends_on:
      - 'cache'
      - 'database'

  immich-machine-learning:
    image: 'ghcr.io/immich-app/immich-machine-learning:${VERSION}'
    container_name: 'immich_machine_learning'

    restart: 'unless-stopped'

    environment: *general-env

    secrets: *general-secrets

    volumes:
      - 'model-cache:/cache'

secrets:
  immich_database_password:
    file: './immich_database_password.secret'

volumes:
  database:
  model-cache:
  upload:

networks:
  traefik_network:
    external: true
