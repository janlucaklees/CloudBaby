version: '3.3'


services:

  traefik:
    image: traefik:${TREAFIK_TAG}
    restart: unless-stopped

    command:
      - "--api"
      - "--log.level=${LOG_LEVEL}"

      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"

      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/.letsencrypt/acme.json"

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"

      - "traefik.http.routers.traefik-https.entrypoints=https"
      - "traefik.http.routers.traefik-https.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik-https.tls.certresolver=letsencrypt"

      - "traefik.http.routers.traefik-https.service=api@internal"

      - "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/.htpasswd"
      - "traefik.http.routers.traefik-https.middlewares=traefik-auth"

      - 'com.centurylinklabs.watchtower.enable=true'

    environment:
      TZ: ${TZ}

    volumes:
      - ./.htpasswd:/.htpasswd
      - ./volumes/.letsencrypt/acme.json:/.letsencrypt/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - traefik_network

    ports:
      - "80:80"
      - "443:443"


networks:
  traefik_network:
    name: traefik_network
