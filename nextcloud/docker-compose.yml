version: '3.3'


services:


  collabora:
    image: collabora/code:${COLLABORA_TAG}
    restart: unless-stopped

    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"

      traefik.http.routers.collabora-https.entrypoints: "https"
      traefik.http.routers.collabora-https.rule: "Host(`${COLLABORA_DOMAIN}`)"
      traefik.http.routers.collabora-https.tls.certresolver: "letsencrypt"

      traefik.http.middlewares.collabora-https.redirectscheme.scheme: "https"
      traefik.http.middlewares.collabora-https.redirectscheme.permanent: "true"

      traefik.http.routers.collabora-http.entrypoints: "http"
      traefik.http.routers.collabora-http.rule: "Host(`${COLLABORA_DOMAIN}`)"
      traefik.http.routers.collabora-http.middlewares: "collabora-https"

      com.centurylinklabs.watchtower.enable: "true"

    environment:
      TZ: ${TZ}

      username: ${COLLABORA_ADMIN_USER}
      password: ${COLLABORA_ADMIN_PASSWORD}

      dictionaries: ${COLLABORA_DICTIONARIES}

      aliasgroup1: https://${DOMAIN}:443
      extra_params: --o:ssl.enable=false --o:ssl.termination=true

    networks:
      - traefik_network


  database:
    image: postgres:${DATABAE_TAG}
    restart: unless-stopped

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASE_USER}", "-d", "${DATABASE_NAME}" ]

    labels:
      com.centurylinklabs.watchtower.enable: "true"

    environment:
      TZ: ${TZ}

      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

    volumes:
      - database:/var/lib/postgresql/data


  cache:
    image: redis:${CACHE_TAG}
    restart: unless-stopped

    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

    labels:
      com.centurylinklabs.watchtower.enable: "true"

    environment:
      TZ: ${TZ}


  nginx:
    image: nginx:${NGINX_TAG}
    restart: unless-stopped

    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"

      traefik.http.routers.nextcloud-https.entrypoints: "https"
      traefik.http.routers.nextcloud-https.rule: "Host(`${DOMAIN}`)"
      traefik.http.routers.nextcloud-https.tls.certresolver: "letsencrypt"

      traefik.http.middlewares.nextcloud-https.redirectscheme.scheme: "https"
      traefik.http.middlewares.nextcloud-https.redirectscheme.permanent: "true"

      traefik.http.routers.nextcloud-http.entrypoints: "http"
      traefik.http.routers.nextcloud-http.rule: "Host(`${DOMAIN}`)"
      traefik.http.routers.nextcloud-http.middlewares: "nextcloud-https"

      com.centurylinklabs.watchtower.enable: "true"

    volumes:
      - ./config/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nextcloud:/var/www/html
      - ${DATA_PATH}/config:/var/www/html/config
      - ${DATA_PATH}/data:/var/www/html/data
      - ${DATA_PATH}/themes:/var/www/html/themes

    networks:
      - default
      - traefik_network


  nextcloud:
    image: nextcloud:${TAG}
    restart: unless-stopped

    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.nextcloud.schedule: "@every 5m"
      ofelia.job-exec.nextcloud.user: "www-data"
      ofelia.job-exec.nextcloud.command: "php -f /var/www/html/cron.php"

    environment:
      TZ: ${TZ}

      POSTGRES_HOST: database
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

      REDIS_HOST: cache

      TRUSTED_PROXIES: ${TRAEFIK_CIDR}
      NEXTCLOUD_TRUSTED_DOMAINS: ${DOMAIN}
      OVERWRITEPROTOCOL: https
      OVERWRITECLIURL: https://${DOMAIN}
      OVERWRITEHOST: ${DOMAIN}

    volumes:
      - ./config/nextcloud/usr/local/etc/php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro
      - ./config/nextcloud/usr/local/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - nextcloud:/var/www/html
      - ${DATA_PATH}/config:/var/www/html/config
      - ${DATA_PATH}/data:/var/www/html/data
      - ${DATA_PATH}/themes:/var/www/html/themes

    depends_on:
      - collabora
      - database
      - cache
      - nginx


volumes:
  database:
  nextcloud:


networks:
  traefik_network:
    external: true
