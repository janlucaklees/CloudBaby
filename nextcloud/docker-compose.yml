services:
  collabora:
    image: collabora/code:latest
    container_name: nextcloud_collabora

    restart: unless-stopped

    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"

      traefik.http.routers.collabora.entrypoints: "websecure"
      traefik.http.routers.collabora.rule: "Host(`${COLLABORA_DOMAIN}`)"
      traefik.http.routers.collabora.tls.certresolver: "letsencrypt"

      com.centurylinklabs.watchtower.enable: "true"

    environment:
      TZ: ${TZ}

      username: ${COLLABORA_USERNAME}
      password: ${COLLABORA_PASSWORD}

      dictionaries: de_DE en_GB en_US

      aliasgroup1: https://${DOMAIN}:443
      extra_params: --o:ssl.enable=false --o:ssl.termination=true

    networks:
      - traefik_network

  database:
    image: "postgres:17-alpine"
    container_name: nextcloud_database

    restart: unless-stopped

    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${DATABASE_USER}",
          "-d",
          "${DATABASE_NAME}"
        ]

    environment:
      TZ: "${TZ}"

      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_USER: "${DATABASE_USER}"
      POSTGRES_PASSWORD_FILE: "/run/secrets/nextcloud_database_password"

    labels:
      com.centurylinklabs.watchtower.enable: "true"

    secrets:
      - nextcloud_database_password

    volumes:
      - database:/var/lib/postgresql/data

  cache:
    image: "redis:alpine"
    container_name: nextcloud_cache

    restart: unless-stopped

    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

    labels:
      com.centurylinklabs.watchtower.enable: "true"

    environment:
      TZ: "${TZ}"

  nextcloud:
    image: "nextcloud:30-fpm-alpine"
    container_name: nextcloud_nextcloud

    restart: unless-stopped

    environment:
      TZ: "${TZ}"

      POSTGRES_HOST: "database"
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_USER: "${DATABASE_USER}"
      POSTGRES_PASSWORD_FILE: "/run/secrets/nextcloud_database_password"

      REDIS_HOST: "cache"

      TRUSTED_PROXIES: "${TRAEFIK_CONTAINER_IP}"
      NEXTCLOUD_TRUSTED_DOMAINS: "${DOMAIN}"

    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.nextcloud.schedule: "@every 5m"
      ofelia.job-exec.nextcloud.user: "www-data"
      ofelia.job-exec.nextcloud.command: "php -f /var/www/html/cron.php"

    secrets:
      - nextcloud_database_password

    volumes:
      - ./config/nextcloud/usr/local/etc/php/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini:ro
      - ./config/nextcloud/usr/local/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro

      - nextcloud:/var/www/html:cached

    depends_on:
      - collabora
      - database
      - cache

  nginx:
    image: "nginx:alpine"
    container_name: nextcloud_nginx

    restart: unless-stopped

    environment:
      TZ: "${TZ}"

    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik_network"

      traefik.http.routers.nextcloud.entrypoints: "websecure"
      traefik.http.routers.nextcloud.rule: "Host(`${DOMAIN}`)"
      traefik.http.routers.nextcloud.tls.certresolver: "letsencrypt"

      com.centurylinklabs.watchtower.enable: "true"

    volumes:
      - ./config/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

      - nextcloud:/var/www/html:cached

    tmpfs:
      - /tmp

    networks:
      - default
      - traefik_network

    depends_on:
      - nextcloud

secrets:
  nextcloud_database_password:
    file: ./nextcloud_database_password.secret

volumes:
  database:
  nextcloud:

networks:
  traefik_network:
    external: true
